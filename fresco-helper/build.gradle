apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // 强制改变所有引用com.android.support版本为rootProject.ext.supportLibVersion
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion rootProject.ext.supportLibVersion
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile 'com.facebook.fresco:fresco:' + rootProject.ext.frescoVersion
    compile 'com.facebook.fresco:animated-gif:' + rootProject.ext.frescoVersion
    compile 'com.facebook.fresco:webpsupport:' + rootProject.ext.frescoVersion
    compile 'com.facebook.fresco:animated-webp:' + rootProject.ext.frescoVersion
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:' + rootProject.ext.SSIVVersion

    compile 'com.android.support:appcompat-v7:' + rootProject.ext.supportLibVersion
    compile 'com.android.support:recyclerview-v7:' + rootProject.ext.supportLibVersion
//    compile 'com.anbetter:MLog:1.1.0'
}
